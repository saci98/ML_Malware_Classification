from typing import Tuple
from collections.abc import Sequence, Callable
from sklearn.feature_extraction.text import CountVectorizer
from scipy.sparse import csr_matrix
from Utils.ReadFile import ReadFile

SeqReader = Callable[[str], str]


def extract_ngrams(ids: Sequence[str], seq_reader: SeqReader, n: int) -> Tuple[CountVectorizer, csr_matrix]:
    class Reader:
        def __init__(self, id: str):
            self.id = id

        def read(self):
            return seq_reader(self.id)

    seqs = [Reader(id) for id in ids]
    ngram_vct = CountVectorizer(ngram_range=(n, n), stop_words=None, lowercase=False, input="file")
    ngrams = ngram_vct.fit_transform(seqs)
    return ngram_vct, ngrams


def extract_bytes_sequence(id: str) -> str:
    sequence_bytes = []
    for byte in ReadFile.bytes_reader(id):
        sequence_bytes.append(byte.lower())
    return " ".join(sequence_bytes)
